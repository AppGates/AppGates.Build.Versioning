<Project>

  <PropertyGroup>
    <IsLocalBuild>$(BuildingInsideVisualStudio.ToString().ToLower().Equals('true'))</IsLocalBuild>
  </PropertyGroup>

  <Target Name="CheckForLocalVersionIncrementRequired" BeforeTargets="NBGV_SetDefaults">
    <PropertyGroup>
      <LocalVersionCounterFilePath>$(BaseIntermediateOutputPath)\version_counter.txt</LocalVersionCounterFilePath>
      <LocalVersionIncrementRequiredPath>$(BaseIntermediateOutputPath)\push_required.txt</LocalVersionIncrementRequiredPath>
    </PropertyGroup>
    <CallTarget Targets="IncrementLocalVersion" Condition="Exists('$(LocalVersionIncrementRequiredPath)') OR Exists('LocalVersionCounterFilePath') == false"/>

  </Target>

  <Target Name="IncrementLocalVersion">
    <PropertyGroup>
      <LocalBuildId>10000</LocalBuildId>
    </PropertyGroup>
    <ReadLinesFromFile Condition="Exists('$(LocalVersionCounterFilePath)')"
               File="$(LocalVersionCounterFilePath)">
      <Output TaskParameter="Lines" PropertyName="LocalBuildId"/>
    </ReadLinesFromFile>
    <PropertyGroup>
      <LocalBuildId>$([MSBuild]::Add('$(LocalBuildId)', '1'))</LocalBuildId>
    </PropertyGroup>
    <WriteLinesToFile File="$(LocalVersionCounterFilePath)" Lines="$(LocalBuildId)"  Overwrite="true" WriteOnlyWhenDifferent="true" />
  </Target>

  <Target Name="CreateOrGetLocalBuildId" AfterTargets="GetBuildVersion" Condition="$(IsLocalBuild)">
    <PropertyGroup>
      <CommitId>$(BuildVersion.Split('-')[0].Split('.')[3])</CommitId>
    </PropertyGroup>

    <ReadLinesFromFile Condition="Exists('$(LocalVersionCounterFilePath)')"
           File="$(LocalVersionCounterFilePath)">
      <Output TaskParameter="Lines" PropertyName="LocalBuildId"/>
    </ReadLinesFromFile>


    <PropertyGroup>
      <LocalBuildVersion>$(BuildVersion.Replace('.$(CommitId)','.$(CommitId)$(LocalBuildId.ToString('0000'))'))</LocalBuildVersion>


    </PropertyGroup>

    <PropertyGroup>
      <PackageFilePath>$(PackageOutputPath)$(PackageId).$(LocalBuildVersion).nupkg</PackageFilePath>

      <PackageExists>false</PackageExists>

      <PackageExists Condition="Exists('$(PackageFilePath)')">true</PackageExists>
      <LocalBuildId Condition="$(PackageExists)">$([MSBuild]::Add('$(LocalBuildId)', '1'))</LocalBuildId>
    </PropertyGroup>
    <Message Importance="high" Text="Checking if package 'file://$(PackageFilePath)' exists..."/>

    <Message Condition="$(PackageExists)" Importance="high" Text="Incremented local build id of '$(MSBuildProjectName)' to '$(LocalBuildId)'"/>
    <WriteLinesToFile File="$(LocalVersionCounterFilePath)" Lines="$(LocalBuildId)"  Overwrite="true" WriteOnlyWhenDifferent="true" />

    <PropertyGroup>
      <LocalBuildVersion>$(BuildVersion.Replace('.$(CommitId)','.$(LocalBuildId)'))</LocalBuildVersion>
    </PropertyGroup>

    <Message Importance="high" Text="Switch local build version of '$(MSBuildProjectName)' from '$(BuildVersion)' to '$(LocalBuildVersion)'"></Message>
    <Message Importance="high" Text="Switch local package version of '$(MSBuildProjectName)' from '$(PackageVersion)' to '$(LocalBuildVersion)'"></Message>

    <PropertyGroup>
      <BuildVersion>$(LocalBuildVersion)</BuildVersion>
      <PackageVersion>$(LocalBuildVersion)</PackageVersion>
      <PackageFilePath>$(PackageOutputPath)$(PackageId).$(LocalBuildVersion).nupkg</PackageFilePath>
    </PropertyGroup>

  </Target>
  
</Project>