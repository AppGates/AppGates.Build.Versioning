<Project>
  <PropertyGroup>


    <!--Opts into the usage of a lock file.-->
    <!--<RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>-->
    <!--Enables locked mode for restore. This is useful in CI/CD scenarios where you want repeatable builds.-->
    <RestoreLockedMode>false</RestoreLockedMode>

    <!--Shall keep the floating version upgrade, but doesn't-->
    <RestoreForceEvaluate Condition="'$(RestoreForceEvaluate)' == ''">$(RestoreLockedMode.Equals(false))</RestoreForceEvaluate>

    <IsLocalBuild Condition="'$(IsLocalBuild)' == ''">$(CI.Equals('true').Equals(false))</IsLocalBuild>

    <!--<PackDependencies>true</PackDependencies>-->
  </PropertyGroup>

  <Import Project="WorkaroundForRevaluate.targets" Condition="$(RestoreForceEvaluate)"/>
  <Import Project="HandleVersionForLocalBuild.targets" Condition="$(IsLocalBuild)"/>
  <Import Project="PackDependencies.targets" Condition="'$(BuildingInsideVisualStudio)' == 'true'"/>


  <PropertyGroup>
    <!--<GitVersionBaseDirectory>$(MSBuildThisFileDirectory)</GitVersionBaseDirectory>-->
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Nerdbank.GitVersioning" Version="*">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

</Project>