<Project>

  <PropertyGroup>
    <NugetLockFilePath>$(MSBuildProjectDirectory)\packages.lock.json</NugetLockFilePath>

    

    <IsCiBuild Condition="'$(IsCiBuild)' == ''" >$(CI.Equals('true'))</IsCiBuild>
    <AutoDeleteLockFileWhenDisabled Condition="'$(AutoDeleteLockFileWhenDisabled)' == ''">$(IsCiBuild.Equals('False'))</AutoDeleteLockFileWhenDisabled>

    <!--Opts into the usage of a lock file.-->
    <RestorePackagesWithLockFile Condition="'$(RestorePackagesWithLockFile)' == ''">true</RestorePackagesWithLockFile>
    <!--Enables locked mode for restore. This is useful in CI/CD scenarios where you want repeatable builds.-->
    <RestoreLockedMode Condition="'$(RestoreLockedMode)' == ''">$(IsCiBuild)</RestoreLockedMode>

    <!--Shall keep the floating version upgrade, but doesn't-->
    <RestoreForceEvaluate Condition="'$(RestoreForceEvaluate)' == ''">$(RestoreLockedMode.Equals('False'))</RestoreForceEvaluate>

  </PropertyGroup>

  <ItemGroup>
    <NugetLockAsset Include="$(NugetLockFilePath)"/>
  </ItemGroup>


  <Import Project="WorkaroundForRevaluate.targets"
          Condition="'$(RestorePackagesWithLockFile)' == 'true' AND '$(RestoreForceEvaluate)' == 'true'"/>

  <Target
    Name="AutoDeleteLockFileWhenDisabled"
    BeforeTargets="_GetRestoreProjectStyle"
    Condition="'$(AutoDeleteLockFileWhenDisabled)' == 'true' AND '$(RestorePackagesWithLockFile)' == 'false'"
    >
    <Delete Files="@(NugetLockAsset)" />
  </Target>

</Project>